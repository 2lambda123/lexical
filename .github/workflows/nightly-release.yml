name: Nightly Release Branch
on:
  push:
    branches:
      - main
jobs:
  release:
    # prevents this action from running on forks
    if: github.repository_owner == 'facebook' && !startsWith(github.ref, 'v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_KEY }}
          fetch-depth: 0
      - uses: pozetroninc/github-action-get-latest-release@d1dafdb6e338bdab109e6afce581a01858680dfb
        id: latest_release
        with:
          repository: facebook/lexical
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |
          git config user.name "Lexical GitHub Actions Bot"
          git config user.email "<>"
      -
      - run: npm install
      - name: Get Current Version
        id: current_version
        run: echo "current_version=$(npm pkg get version)" >> "$GITHUB_OUTPUT"
        ## increment the root package.json version
      - run: npm run increment-version -- --i prerelease -- base ${{ steps.latest_release.outputs.release }}
        ## increment other package versions
      - run: npm run update-version
      - name: Get New Version
        id: new_version
        run: echo "new_version=$(npm pkg get version)" >> "$GITHUB_OUTPUT"
        ## tag the current commit
      - run: git tag -a v${{ steps.new_version.outputs.new_version }} -m v${{ steps.new_version.outputs.new_version }}
        ## push tags to the remote
      - run: git push -u git@github.com:facebook/lexical.git --tags
        ## prepare & release
      - run: npm run prepare-release
      - run: node ./scripts/npm/release.js --non-interactive --dry-run=${{ secrets.RELEASE_DRY_RUN }} --channel next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        ## create Github release
      #- run: gh release create ${{ steps.new_version.outputs.new_version }} --verify-tag --prerelease --generate-notes --notes-start-tag ${{ steps.current_version.outputs.current_version }}
